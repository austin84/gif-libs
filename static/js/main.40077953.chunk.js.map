{"version":3,"sources":["components/Header.js","components/AdjectiveInput.js","components/NounInput.js","components/SearchFields.js","components/Results.js","components/CombinedResults.js","components/Footer.js","App.js","index.js"],"names":["Header","className","AdjectiveInput","props","type","placeholder","value","adjectiveValue","onChange","e","setValue","target","NounInput","nounValue","SearchFields","onSubmit","fetch","then","res","json","setNounGif","url","data","embed_url","alt","err","console","log","setAdjectiveGif","setCombinedGif","setAdjectiveValue","setNounValue","preventDefault","setGifs","Results","src","adjectiveGif","title","height","width","nounGif","CombinedResults","combinedGif","Footer","App","useState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40077953.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header() {\n  return (\n    <div>\n      <header className='Header'>\n        <h1>GIF-Libs</h1>\n        <h2 className='nav'>Sample ||| Nav</h2>\n      </header>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function AdjectiveInput(props) {\n  const handleOnChange = (e) => {\n    props.setValue(e.target.value);\n  };\n\n  return (\n    <div className='SearchFields'>\n      <div className='inputs'>\n        <div className='adjectiveInputDiv'>\n          <label>Please enter an</label>\n          <input\n            type='text'\n            className='adjectiveInput'\n            placeholder='Adjective...'\n            value={props.adjectiveValue}\n            onChange={handleOnChange}\n          ></input>\n          <label>,</label>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default function NounInput(props) {\n  const handleOnChange = (e) => {\n    props.setValue(e.target.value);\n  };\n\n  return (\n    <div className='SearchFields'>\n      <div className='inputs'>\n        <div className='nounInputDiv'>\n          <label>then enter a</label>\n          <input\n            type='text'\n            className='nounInput'\n            placeholder='Noun...'\n            value={props.nounValue}\n            onChange={handleOnChange}\n          ></input>\n          <label>,</label>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport AdjectiveInput from './AdjectiveInput';\nimport NounInput from './NounInput';\n\nexport default function SearchFields(props) {\n  const handleOnSubmit = (e) => {\n    if (props.nounValue !== '')\n      try {\n        fetch(\n          `https://api.giphy.com/v1/gifs/search?api_key=a15jk0QUUQFTun4jox8DnPfZd701vIX2&q=${props.nounValue}&limit=1&offset=0&rating=r&lang=en`\n        )\n          .then((res) => res.json())\n          .then((json) => {\n            props.setNounGif({\n              url: json.data[0].embed_url,\n              alt: '',\n            });\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n    if (props.adjectiveValue !== '')\n      try {\n        fetch(\n          `https://api.giphy.com/v1/gifs/search?api_key=a15jk0QUUQFTun4jox8DnPfZd701vIX2&q=${props.adjectiveValue}&limit=1&offset=0&rating=r&lang=en`\n        )\n          .then((res) => res.json())\n          .then((json) => {\n            props.setAdjectiveGif({\n              url: json.data[0].embed_url,\n              alt: 'adjective',\n            });\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n    if (props.adjectiveValue !== '' && props.nounValue !== '')\n      try {\n        fetch(\n          `https://api.giphy.com/v1/gifs/search?api_key=a15jk0QUUQFTun4jox8DnPfZd701vIX2&q=${props.adjectiveValue}%20${props.nounValue}&limit=1&offset=0&rating=r&lang=en`\n        )\n          .then((res) => res.json())\n          .then((json) => {\n            props.setCombinedGif({\n              url: json.data[0].embed_url,\n              alt: 'noun',\n            });\n          });\n      } catch (err) {\n        console.log(err);\n      }\n\n    props.setAdjectiveValue('');\n    props.setNounValue('');\n    e.preventDefault();\n  };\n\n  return (\n    <form onSubmit={handleOnSubmit}>\n      <div className='SearchFields'>\n        <AdjectiveInput\n          setGifs={props.setGifs}\n          value={props.adjectiveValue}\n          setValue={props.setAdjectiveValue}\n        />\n        <NounInput\n          setGifs={props.setGifs}\n          value={props.nounValue}\n          setValue={props.setNounValue}\n        />\n      </div>\n      <input className='submitBtn' type='submit' value=\"Mix 'em Up\"></input>\n    </form>\n  );\n}\n","import React from 'react';\n\nexport default function Results(props) {\n  return (\n    <>\n      <h3 className='resultsTitle'>Gif Results</h3>\n      <div className='Results'>\n        <div className='adjectiveResult'>\n          <iframe\n            src={props.adjectiveGif.url}\n            title={props.adjectiveGif.alt}\n            value={props.adjectiveValue}\n            height='270'\n            width='480'\n          ></iframe>\n        </div>\n        <div className='nounResult'>\n          <iframe\n            src={props.nounGif.url}\n            title={props.nounGif.alt}\n            value={props.nounValue}\n            height='270'\n            width='480'\n          ></iframe>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function CombinedResults(props) {\n  return (\n    <>\n      <h3 className='combinedResultsTitle'>Combined Gif Result</h3>\n      <div className='CombinedResults'>\n        <div className='CombinedResultsChild'>\n          <iframe\n            src={props.combinedGif.url}\n            title={props.combinedGif.alt}\n            height='338'\n            width='480'\n          ></iframe>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nexport default function Footer() {\n  return <div className='Footer'>Copyright 2020, Austin Veatch</div>;\n}\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport SearchFields from './components/SearchFields';\nimport Results from './components/Results';\nimport CombinedResults from './components/CombinedResults';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n  const [adjectiveGif, setAdjectiveGif] = useState(() => {\n    return {\n      url: 'https://giphy.com/embed/3o6MbtSmRdZEB7jnwI',\n      alt: '',\n    };\n  });\n  const [nounGif, setNounGif] = useState(() => {\n    return {\n      url: 'https://giphy.com/embed/l2JdTaFdKBU4uCdJS',\n      alt: '',\n    };\n  });\n  const [combinedGif, setCombinedGif] = useState(() => {\n    return {\n      url: 'https://giphy.com/embed/3o6ZsYIHKbppBG37dm',\n      alt: 'adjective and noun combined',\n    };\n  });\n  const [nounValue, setNounValue] = useState('');\n  const [adjectiveValue, setAdjectiveValue] = useState('');\n\n  return (\n    <div className='App'>\n      <Header />\n      <SearchFields\n        adjectiveGif={adjectiveGif}\n        setAdjectiveGif={setAdjectiveGif}\n        nounGif={nounGif}\n        setNounGif={setNounGif}\n        setCombinedGif={setCombinedGif}\n        nounValue={nounValue}\n        setNounValue={setNounValue}\n        adjectiveValue={adjectiveValue}\n        setAdjectiveValue={setAdjectiveValue}\n      />\n      <Results\n        adjectiveGif={adjectiveGif}\n        setAdjectiveGif={setAdjectiveGif}\n        nounGif={nounGif}\n        setNounGif={setNounGif}\n      />\n      <CombinedResults\n        combinedGif={combinedGif}\n        setCombinedGif={setCombinedGif}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}